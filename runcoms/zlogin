#
# Executes commands at login post-zshrc.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Execute code that does not affect the current session in the background.
{
  # Compile the completion dump to increase startup speed.
  zcompdump="${ZDOTDIR:-$HOME}/.zcompdump"
  if [[ -s "$zcompdump" && (! -s "${zcompdump}.zwc" || "$zcompdump" -nt "${zcompdump}.zwc") ]]; then
    zcompile "$zcompdump"
  fi
} &!

# Print a random, hopefully interesting, adage.
if (( $+commands[fortune] )); then
  if [[ -t 0 || -t 1 ]]; then
    fortune -s
    print
  fi
fi

if [[ -s "$HOME/.rvm/scripts/rvm" ]]; then
  source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*
fi

if command -v "brew" > /dev/null && [[ -f "$(brew --prefix)/share/zsh-autosuggestions/zsh-autosuggestions.zsh" ]]; then
    source $(brew --prefix)/share/zsh-autosuggestions/zsh-autosuggestions.zsh
elif [[ -f "${HOME}/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh" ]]; then
    source "${HOME}/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh"
fi

# ---- zoxide -----
eval "$(zoxide init --cmd 'cd' zsh)"

# ---- FZF -----

# --- setup fzf theme ---
fg="#CBE0F0"
bg="#011628"
bg_highlight="#143652"
purple="#B388FF"
blue="#06BCE4"
cyan="#2CF9ED"

export FZF_DEFAULT_OPTS="--color=fg:${fg},bg:${bg},hl:${purple},fg+:${fg},bg+:${bg_highlight},hl+:${purple},info:${blue},prompt:${cyan},pointer:${cyan},marker:${cyan},spinner:${cyan},header:${cyan}"

# -- Use fd instead of fzf --

export FZF_DEFAULT_COMMAND="fd --hidden --strip-cwd-prefix --exclude .git"
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_ALT_C_COMMAND="fd --type=d --hidden --strip-cwd-prefix --exclude .git"

# Use fd (https://github.com/sharkdp/fd) for listing path candidates.
# - The first argument to the function ($1) is the base path to start traversal
# - See the source code (completion.{bash,zsh}) for the details.
_fzf_compgen_path() {
  fd --hidden --exclude .git . "$1"
}

# Use fd to generate the list for directory completion
_fzf_compgen_dir() {
  fd --type=d --hidden --exclude .git . "$1"
}

if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/fzf-git.sh" ]]; then
    source "${ZDOTDIR:-$HOME}/.zprezto/fzf-git.sh"
fi

export FZF_CTRL_T_OPTS="--preview 'bat -n --color=always --line-range :500 {}'"
export FZF_ALT_C_OPTS="--preview 'eza --tree --color=always {} | head -200'"

# Advanced customization of fzf options via _fzf_comprun function
# - The first argument to the function is the name of the command.
# - You should make sure to pass the rest of the arguments to fzf.
_fzf_comprun() {
  local command=$1
  shift

  case "$command" in
    cd)           fzf --preview 'eza --tree --color=always {} | head -200' "$@" ;;
    export|unset) fzf --preview "eval 'echo \$'{}"         "$@" ;;
    ssh)          fzf --preview 'dig {}'                   "$@" ;;
    *)            fzf --preview "bat -n --color=always --line-range :500 {}" "$@" ;;
  esac
}

function fzf-keybinds() {
    echo "Files                         <󰘴> g <󰘴> F"
    echo "Branches                      <󰘴> g <󰘴> B"
    echo "Tags                          <󰘴> g <󰘴> T"
    echo "Remotes                       <󰘴> g <󰘴> R"
    echo "commit Hashes                 <󰘴> g <󰘴> H"
    echo "Stashes                       <󰘴> g <󰘴> S"
    echo "reflogs                       <󰘴> g <󰘴> L"
    echo "Worktrees                     <󰘴> g <󰘴> W"
    echo "Each ref (git for-each-ref)   <󰘴> g <󰘴> E"
}

# ----- Bat (better cat) -----

alias cat="bat"

# ---- Eza (better ls) -----

# --color-scale, --colour-scale
#   highlight levels of field distinctly.  Use comma(,) separated list of all, age, size
alias ls="eza --color=auto --long --git --no-filesize --icons=always --group-directories-first --color-scale-mode=fixed --no-time --no-user --no-permissions"
alias ll="eza --color=auto --long --git --no-filesize --icons=always --group-directories-first --color-scale-mode=fixed --time-style=relative --group-directories-first"
alias la="eza --color=auto --long --git --no-filesize --icons=always --group-directories-first --color-scale-mode=fixed --time-style=relative --group-directories-first --all"
alias lt="eza --color=auto --long --git --no-filesize --icons=always --group-directories-first --color-scale-mode=gradient --color-scale=age --no-time --tree --level 2"

# ---- Jump -----

[[ -s "${HOME}/.autojump/etc/profile.d/autojump.sh" ]] && source "${HOME}/.autojump/etc/profile.d/autojump.sh"
autoload -U compinit && compinit -u

function atuin-macro-setup () {
    # bindkey '^a' atuin-up-search
    # Has some UI conflicts with current setup
    function atuin-strict-search () {
        # --cmd-only \
        # --filter-mode possible values: global, host, session, directory, workspace
        # --format <FORMAT>
        #   Available variables: {command}, {directory}, {duration}, {user}, {host}, {time}, {exit} and {relativetime}.
        #   Example: --format "{time} - [{duration}] - {directory}$\t{command}"
      atuin search \
        --interactive \
        --exit 0 \
        --inline-height 30 \
        --filter-mode 'global' \
        --search-mode 'fulltext' \
        --human

    }
    zle -N atuin-strict-search
    bindkey '^a' atuin-strict-search
}

# ---- atuin (command history) -----
if type "atuin" > /dev/null
then
    eval "$(atuin init zsh)"
    # eval "$(atuin init zsh --disable-up-arrow)"
    eval "$(atuin gen-completions --shell zsh)"
else
    echo "!!! atuin not found !!!"
fi

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

# ---- pipx autocomplete -----
# Maybe delete for Q?
if type "pipx" > /dev/null && type "register-python-argcomplete" > /dev/null
then
    autoload -U compinit && compinit
    # I might not need this:
    # autoload -U bashcompinit
    # bashcompinit
    eval "$(register-python-argcomplete pipx)"
fi

if [ -d "$HOME/.pyenv" ]
then
    export PYENV_ROOT="$HOME/.pyenv"
    [[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"
    eval "$(pyenv init -)"
fi
