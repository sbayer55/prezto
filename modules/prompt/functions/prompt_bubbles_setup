# Load dependencies.
pmodload 'helper'

#  󱎕 󰬸  

# shellcheck disable=SC2034
bubble_no_color='\033[0m'
# shellcheck disable=SC2034
bubble_black='30'
# shellcheck disable=SC2034
bubble_red='31'
# shellcheck disable=SC2034
bubble_green='32'
# shellcheck disable=SC2034
bubble_yellow='33'
# shellcheck disable=SC2034
bubble_blue='34'
# shellcheck disable=SC2034
bubble_pink='35'
# shellcheck disable=SC2034
bubble_teal='36'
# shellcheck disable=SC2034
bubble_grey='37'
# shellcheck disable=SC2034
bubble_white='38'

# Define variables.
_prompt_bubbles_current_bg='NONE'
_prompt_bubbles_segment_separator='󱎕'
_prompt_bubbles_start_time=$SECONDS

function rgb_fg () {
  local r="$1"
  local g="$2"
  local b="$3"
  printf "%b" "\x1b[38;2;${r};${g};${b}m";
}

function arr_to_code () {
  local str="$1"
  # shellcheck disable=SC2296
  local parts=("${(@s[,])str}")
  printf "%s;%s;%s\n" "${parts[1]}" "${parts[2]}" "${parts[3]}"
  printf "%s\n" "${parts[@]}"
}
#arr_to_code "56,12,72"
#  printf "%s;%s;%s\n" "$2[1]" "${2[2]}" "$2[3]"
#  echo "$1"
#export -a arr1=("40" "90" "215")
#export -a arr2=(90 11 86)
#arr_to_code $arr1 $arr2

function rgb () {
  local -a arr1=("$@[1,1]" "$@[1,2]" "$@[1,3]")
  local -a arr2=("$@[2,1]" "$@[2,2]" "$@[2,3]")
  local fg_r="$1"
  local fg_g="$2"
  local fg_b="$3"
  local bg_r="$4"
  local bg_g="$5"
  local bg_b="$6"
  printf "%b" "\x1b[38;2;${fg_r};${fg_g};${fg_b};${bg_r};${bg_g};${bg_b}m";
}

function prompt_bubbles_start_segment {
  local bg fg
  [[ -n "$1" ]] && bg="%K{$1}" || bg="%k"
  [[ -n "$2" ]] && fg="%F{$2}" || fg="%f"
  if [[ "$_prompt_bubbles_current_bg" != 'NONE' && "$1" != "$_prompt_bubbles_current_bg" ]]; then
    print -n " $bg%F{$_prompt_bubbles_current_bg}$_prompt_bubbles_segment_separator$fg "
  else
    print -n "$bg$fg "
  fi
  _prompt_bubbles_current_bg="$1"
  [[ -n "$3" ]] && print -n "$3"
}

function prompt_bubbles_end_segment {
  if [[ -n "$_prompt_bubbles_current_bg" ]]; then
    print -n " %k%F{$_prompt_bubbles_current_bg}$_prompt_bubbles_segment_separator"
  else
    print -n "%k"
  fi
  print -n "%f"
  _prompt_bubbles_current_bg=''
}

prompt_bubbles_print_elapsed_time() {
  local end_time=$(( SECONDS - _prompt_bubbles_start_time ))
  local hours minutes seconds remainder

  if (( end_time >= 3600 )); then
    hours=$(( end_time / 3600 ))
    remainder=$(( end_time % 3600 ))
    minutes=$(( remainder / 60 ))
    seconds=$(( remainder % 60 ))
    print -P "%B%F{red}>>> elapsed time ${hours}h${minutes}m${seconds}s%b"
  elif (( end_time >= 60 )); then
    minutes=$(( end_time / 60 ))
    seconds=$(( end_time % 60 ))
    print -P "%B%F{yellow}>>> elapsed time ${minutes}m${seconds}s%b"
  elif (( end_time > 10 )); then
    print -P "%B%F{green}>>> elapsed time ${end_time}s%b"
  fi
}

function prompt_bubbles_precmd {
  setopt LOCAL_OPTIONS
  unsetopt XTRACE KSH_ARRAYS

  # Format PWD.
  _prompt_bubbles_pwd=$(prompt-pwd)

  if echo "$_prompt_bubbles_pwd" | grep -q "/workplace"; then
#    _prompt_bubbles_pwd="$(echo "$_prompt_bubbles_pwd" | sed 's|^.*/workplace|[]|')"
    # Parameter Expansion to replace `^.*workplace` with ws
    _prompt_bubbles_pwd="${_prompt_bubbles_pwd//#\~*\/workplace/󱃷 }"
  fi

  # Get Git repository information.
  # shellcheck disable=SC2154
  if (( $+functions[git-info] )); then
    git-info
  fi

  # Calculate and print the elapsed time.
  prompt_bubbles_print_elapsed_time

  _host="${HOST}"

  # Here is the colors:
  # https://www.manpagez.com/man/1/zshmisc/
#   PS2=""

#   # no work
#   if [[ -n "$git_info" ]]; then
# #    PS2="gg"
#     # shellcheck disable=SC2296
#     local stuff="${(e)git_info[ref]}${(e)git_info[status]}"
# #    local stuff_bubble="$(bubble "${stuff}" "${bubble_green}" "${bubble_red}")"

#     PS2="$stuff"

# #    if [[ $diff -gt 0 ]]; then
# #      for ((i=0; i<diff; i++)); do
# #        PS2+="$(printf "%b" "\033[1D")"
# #      done
# #    fi
#   fi
}

function prompt_bubbles_preexec {
  _prompt_bubbles_start_time="$SECONDS"
}

function bubble_8bit () {
  local msg="$1"
  local fg="$2"
  local bg_color_raw="$3"
  local bg="$((bg_color_raw + 10))"

  local bubble_color="\033[${bg};${fg}m"
  local delimiter_color="\033[0;${bg_color_raw}m"

  printf "  %b%b" "${delimiter_color}" "${bubble_color}"
  printf " %s " "${msg}"
  printf "%b%b" "${delimiter_color}" "${bubble_no_color}"
}

function bubble () {
  local msg="$1"
  local fg="$2"
  local bg_color_raw="$3"
  local bg="$((bg_color_raw + 10))"

  local bubble_color="\033[${bg};${fg}m"
  local delimiter_color="\033[0;${bg_color_raw}m"

  printf "  %b%b" "${delimiter_color}" "${bubble_color}"
  printf " %s " "${msg}"
  printf "%b%b" "${delimiter_color}" "${bubble_no_color}"
}

function bubble_extension () {
  local msg="$1"
  local fg="$2"
  local bg_color_raw="$3"
  # TODO: use env var instead
  local old_fg="$4"
  local bg="$((bg_color_raw + 10))"

  local bubble_color="\033[${bg};${fg}m"

  local transition_color="\033[${bg};${old_fg}m"
  local delimiter_color="\033[0;${bg_color_raw}m"

  # Go back one character (2 to remove the color echoed)
#  printf "--%b-" "\033[1D"
  printf "%b" "\033[1D"
  printf "%b%b" "${transition_color}" "${bubble_color}"
  printf " %s " "${msg}"
  printf "%b%b" "${delimiter_color}" "${bubble_no_color}"
}

function make_prompt () {
  print -n '${bubble " $HOST" "${bubble_green}" "${bubble_red}"}\n'
  print -n '$(bubble_extension "\$_prompt_bubbles_pwd" "${bubble_blue}" "${bubble_teal}")\n'
  print -n '{$(bubble " $HOST" "${bubble_green}" "${bubble_red}")}\n'
  printf "%s\n" '${bubble " $HOST" "${bubble_green}" "${bubble_red}"}'
  printf "%s\n" '$(bubble_extension "\$_prompt_bubbles_pwd" "${bubble_blue}" "${bubble_teal}")'
  printf "%s\n" '{$(bubble " $HOST" "${bubble_green}" "${bubble_red}")}'
  if [[ -n "$git_info" ]]; then
#    prompt_bubbles_start_segment green black '${(e)git_info[ref]}${(e)git_info[status]}'
    printf "%s" '{$(bubble "${(e)git_info[ref]}${(e)git_info[status]}" "${bubble_white}" "${bubble_red}")}'
  fi
  print -n "%k%f"
}

function make_git () {
  if [[ -n "$git_info" ]]; then
    # shellcheck disable=SC2296
    local txt="$(bubble "${(e)git_info[ref]}${(e)git_info[status]}" "${bubble_pink}" "${bubble_black}")"
    print -n "${txt}"
#    printf "%s" '{$(bubble "${(e)git_info[ref]}${(e)git_info[status]}" "${bubble_white}" "${bubble_red}")}'
  fi
}

function host_bubble () {
  local os_type="󰒋"

  if [[ "$OSTYPE" == darwin* ]]; then
    os_type=''
  fi

  print -n "$(bubble "${os_type} $HOST" "${bubble_black}" "${bubble_blue}")"
}

function pwd_bubble_ext () {
  print -n "$(bubble_extension "$_prompt_bubbles_pwd" "${bubble_blue}" "${bubble_black}" "${bubble_blue}")"
}

function prompt_bubbles_setup {
  setopt LOCAL_OPTIONS
  unsetopt XTRACE KSH_ARRAYS
  prompt_opts=(cr percent sp subst)

  # Load required functions.
  autoload -Uz add-zsh-hook

  # Add hook for calling git-info before each command.
  add-zsh-hook preexec prompt_bubbles_preexec
  add-zsh-hook precmd prompt_bubbles_precmd

  # Set editor-info parameters.
  zstyle ':prezto:module:editor:info:completing' format '%B%F{red}...%f%b'
  zstyle ':prezto:module:editor:info:keymap:primary' format '%B%F{blue}❯%f%b'
  zstyle ':prezto:module:editor:info:keymap:primary:overwrite' format '%F{red}♺%f'
  zstyle ':prezto:module:editor:info:keymap:alternate' format '%B%F{red}[vicmd]%f%b'

  # Set git-info parameters.
  zstyle ':prezto:module:git:info' verbose 'yes'
  zstyle ':prezto:module:git:info:action' format ' ⁝ %s'
  zstyle ':prezto:module:git:info:added' format ' ✚'
  zstyle ':prezto:module:git:info:ahead' format ' ⬆'
  zstyle ':prezto:module:git:info:behind' format ' ⬇'
  zstyle ':prezto:module:git:info:branch' format ' %b'
  zstyle ':prezto:module:git:info:commit' format '➦ %.7c'
  zstyle ':prezto:module:git:info:deleted' format ' ✖'
  zstyle ':prezto:module:git:info:dirty' format ' ⁝'
  zstyle ':prezto:module:git:info:modified' format ' ✱'
  zstyle ':prezto:module:git:info:position' format '%p'
  zstyle ':prezto:module:git:info:renamed' format ' ➙'
  zstyle ':prezto:module:git:info:stashed' format ' S'
  zstyle ':prezto:module:git:info:unmerged' format ' ═'
  zstyle ':prezto:module:git:info:untracked' format ' ?'
  zstyle ':prezto:module:git:info:keys' format \
    'ref' '$(coalesce "%b" "%p" "%c")' \
    'status' '%s%D%A%B%S%a%d%m%r%U%u'

  # %v - virtualenv name.
  zstyle ':prezto:module:python:info:virtualenv' format 'virtualenv:%v'

#  purple = rgb 174 129 255

  # Define prompts.
  # shellcheck disable=SC2034
  PROMPT='
%D{$(host_bubble)$(pwd_bubble_ext)$(make_git)}
${editor_info[keymap]} '

  # shellcheck disable=SC2034
  RPROMPT=''
  # RPROMPT='$PS2'

  # shellcheck disable=SC2034
  SPROMPT='zsh: correct %F{red}%R%f to %F{green}%r%f [nyae]? '
}

prompt_bubbles_setup "$@"
